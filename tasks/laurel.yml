---

- name: Ensure archives folder exists
  ansible.builtin.file:
    dest: "{{ install_archives }}"
    state: directory
    mode: '0700'

- name: Determine latest release of laurel # noqa command-instead-of-module
  ansible.builtin.shell: "curl -s https://github.com/threathunters-io/laurel/releases | grep -Po 'Release\\sv[^<]+' | cut -d ' ' -f2 | uniq | head -1"
  register: laurel_latest
  changed_when: false

- name: Setting laurel version
  ansible.builtin.set_fact:
    laurel_version: "{{ laurel_latest.stdout }}"

- name: Unarchive laurel binary
  ansible.builtin.unarchive:
    src: 'https://github.com/threathunters-io/laurel/releases/download/{{ laurel_version }}/laurel-{{ laurel_version }}-x86_64-musl.tar.gz'
    dest: "/usr/local/sbin"
    mode: '0755'
    include: laurel
    creates: "/usr/local/sbin/laurel"
    remote_src: true

- name: Create laurel system account
  ansible.builtin.user:
    name: _laurel
    comment: 'Laurel Auditing'
    home: /var/log/laurel
    create_home: true
    system: true
    state: present

- name: Ensure /etc/laurel directory exists
  ansible.builtin.file:
    path: /etc/laurel
    state: directory
    mode: '0755'
    owner: root
    group: root

- name: Set laurel configuration
  ansible.builtin.template:
    src: "{{ auditd_laurel_config }}"
    dest: /etc/laurel/config.toml
    mode: '0644'
    owner: root
    group: root

- name: Set laurel audit plugin configuration
  ansible.builtin.template:
    src: "{{ auditd_laurel_plugin }}"
    dest: "{{ auditd_plugins }}/laurel.conf"
    mode: '0644'
    owner: root
    group: root
  notify:
    - Restart auditd
    - Restart auditd - rhel7+

- name: SELinux Configuration
  when: selinux_enabled | bool
  block:
    - name: Copy laurel selinux policy
      ansible.builtin.copy:
        src: laurel.pp
        dest: /tmp/
        mode: '0644'
        owner: root
        group: root

    - name: Install laurel selinux policy
      ansible.builtin.command: semodule -i /tmp/laurel.pp
      register: selinux
      failed_when: selinux.rc != 0
      changed_when: false

    - name: Set laurel selinux context
      ansible.builtin.command: restorecon -v -R -F /usr/local/sbin/laurel /etc/laurel /var/log/laurel
      register: restorecon
      failed_when: restorecon.rc != 0
      changed_when: false

- name: Ensure laurel reporting script exists
  ansible.builtin.template:
    src: "{{ auditd_laurel_reporting_template }}.j2"
    dest: "/usr/local/scripts/{{ auditd_laurel_reporting_template | basename }}"
    mode: '0755'

- name: Add logrotate configuration for laurel log
  ansible.builtin.template:
    src: logrotate-laurel.j2
    dest: /etc/logrotate.d/laurel
    mode: '0644'
    validate: 'logrotate -dv %s'
